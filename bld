#!/bin/bash -e

show_help() {
cat << EOF
  Usage: ${0##*/} [-acho]
  Build this project, producing all binaries in build/bin
  -a Do a build for AWS Lambda
       Binaries are built for linux/amd64 and Lambda zip files are created in
       build/zip for each binary
  -c Clean the build directory (destroy it completely) before build starts 
  -o Clean only then exit
  -h Dispaly this help and exit; ignore all other options 
EOF
}

qpopd() {
  popd &> /dev/null
}

while getopts acho opt; do
  case $opt in
    a)
      DOLAMBDA=1
      ;;
    c)
      DOCLEAN=1
      ;;
    o)
      CLEANONLY=1
      ;;
    *)
      show_help >&2
      exit 1
  esac
done

pushd `dirname $0` &> /dev/null
trap qpopd EXIT

if [[ -n $DOCLEAN || -n $CLEANONLY ]]; then
  go clean
  rm -rf build
  if [[ -n $CLEANONLY ]]; then
    exit 0
  fi
fi

BIN="build/bin"
ZIP="build/zip"
TGTS=`find ./cmd -maxdepth 1 -mindepth 1 -type d -print`

mkdir -p $BIN
if [[ -n $DOLAMBDA ]]; then
  mkdir -p $ZIP
fi

for t in $TGTS; do
  name=`basename $t`
  os=`uname -s`
  if [[ -z $DOLAMBDA && ($os == MINGW* || $os == CYGWIN*) ]]; then
    name=$name.exe
  fi
  echo "Building ${name}..."
  if [[ -n $DOLAMBDA ]]; then
    export GOOS=linux
    export GOARCH=amd64
  fi
  go build -o build/bin/$name $t
  if [[ -n $DOLAMBDA ]]; then
    build-lambda-zip -output $ZIP/$name.zip $BIN/$name 
  fi
done
