#!/bin/bash -e

#	mstdnlambda
#	Copyright (C) 2022 Battams, Derek <derek@battams.ca>
#
#	This program is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; either version 2 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License along
#	with this program; if not, write to the Free Software Foundation, Inc.,
#	51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

show_help() {
cat << EOF
  Usage: ${0##*/} [-acho]
  Build this project, producing all binaries in build/bin
  -c Clean the build directory (destroy it completely) before build starts 
  -o Clean only then exit
  -h Dispaly this help and exit; ignore all other options 
EOF
}

qpopd() {
  popd &> /dev/null
}

ZIPEXE="zip"

while getopts cho opt; do
  case $opt in
    c)
      DOCLEAN=1
      ;;
    o)
      CLEANONLY=1
      ;;
    *)
      show_help >&2
      exit 1
  esac
done

pushd `dirname $0` &> /dev/null
trap qpopd EXIT

if [[ -n $DOCLEAN || -n $CLEANONLY ]]; then
  go clean
  rm -rf build
  if [[ -n $CLEANONLY ]]; then
    exit 0
  fi
fi

BIN="build/bin"
ZIP="build/zip"
TGTS=`find ./cmd -maxdepth 1 -mindepth 1 -type d -print`

mkdir -p $BIN

platforms=("windows/amd64" "linux/amd64" "linux/arm64")
for t in $TGTS; do
  for platform in "${platforms[@]}"; do
    name=`basename $t`
    fields=(${platform//\// })
    export GOOS=${fields[0]}
    export GOARCH=${fields[1]}
    if [[ "$GOOS" == "windows" ]]; then
      name=$name.exe
    fi
    os=`uname -s`
    if [[ $os == MINGW* || $os == CYGWIN* ]]; then
      ZIPEXE="build-lambda-zip -output"
    fi

    echo "Building ${name} for $platform..."
    EXENAME=$BIN/$GOOS-$GOARCH/$name
    go build -o $EXENAME $t
    if [[ "$GOOS" == "linux" && $name == "handler" ]]; then
      $ZIPEXE $EXENAME.zip $EXENAME
    fi
  done
done
